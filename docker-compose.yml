version: '3.4'

services:
  fpm:
    container_name: ${COMPOSE_PROJECT_NAME:-unnamed}_fpm_${COMPOSE_PROJECT_PHP_VERSION:-8.0}_${COMPOSE_PROJECT_NODE_VERSION:-14.21.1}
    build:
      context: "${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6"
      args:
        PHP_VERSION: ${COMPOSE_PROJECT_PHP_VERSION:-8.0}
        NODE_VERSION: ${COMPOSE_PROJECT_NODE_VERSION:-14.21.1}
        PHP_USER_NAME: ${COMPOSE_PROJECT_PHP_USER_NAME:-developer}
        PHP_USER_GROUP: ${COMPOSE_PROJECT_PHP_USER_GROUP:-developer}
        PHP_UID: ${COMPOSE_PROJECT_PHP_UID:-1000}
        PHP_GID: ${COMPOSE_PROJECT_PHP_GID:-1000}
    command: php-fpm -R
    user: "${COMPOSE_PROJECT_USER_NAME:-developer}"
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    volumes:
      - 'appcode:/var/www:consistent'
      - 'home-php:/home/php'
      - 'home-root:/root'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6/msmtprc:/home/php/.msmtprc:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint:ro'
    working_dir: '/var/www'
    networks:
      - 'appnet'
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "mysql:database"
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=${COMPOSE_PROJECT_COMPOSER_AUTH:-null}'
      - 'NODE_OPTIONS="--max-old-space-size=1024"'
      - 'XDEBUG_MODE=${XDEBUG_MODE_FPM:-off}'
      - 'DATABASE_HOST=${COMPOSE_PROJECT_DATABASE_HOST:-database}'
      - 'DATABASE_PORT=${COMPOSE_PROJECT_DATABASE_PORT:-3306}'
      - 'DATABASE_USER=${COMPOSE_PROJECT_ORO_DB_USER:-akeneo_pim}'
      - 'DATABASE_PASSWORD=${COMPOSE_PROJECT_DATABASE_PASSWORD:-akeneo_pim}'
      - 'DATABASE_NAME=${COMPOSE_PROJECT_DATABASE_NAME:-akeneo_pim}'
      - 'APP_DATABASE_HOST=$${DATABASE_HOST}'
      - 'APP_DATABASE_PORT=$${DATABASE_PORT}'
      - 'APP_DATABASE_NAME=$${DATABASE_NAME}'
      - 'APP_DATABASE_USER=$${DATABASE_USER}'
      - 'APP_DATABASE_PASSWORD=$${DATABASE_PASSWORD}'
      - 'APP_INDEX_HOSTS=elasticsearch:9200'
      - 'NO_DOCKER=true'
      - 'AKENEO_PIM_URL=http://localhost:${COMPOSE_PROJECT_PORT_PREFIX}80'
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9000"
      start_period: 60s
      interval: 2s

  cli:
    container_name: ${COMPOSE_PROJECT_NAME:-unnamed}_cli_${COMPOSE_PROJECT_PHP_VERSION:-8.0}_${COMPOSE_PROJECT_NODE_VERSION:-14.21.1}
    build:
      context: "${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6"
      args:
        PHP_VERSION: ${COMPOSE_PROJECT_PHP_VERSION:-8.0}
        NODE_VERSION: ${COMPOSE_PROJECT_NODE_VERSION:-14.21.1}
        PHP_USER_NAME: ${COMPOSE_PROJECT_PHP_USER_NAME:-developer}
        PHP_USER_GROUP: ${COMPOSE_PROJECT_PHP_USER_GROUP:-developer}
        PHP_UID: ${COMPOSE_PROJECT_PHP_UID:-1000}
        PHP_GID: ${COMPOSE_PROJECT_PHP_GID:-1000}
    command: /bin/true
    user: "${COMPOSE_PROJECT_USER_NAME:-developer}"
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    volumes:
      - 'appcode:/var/www:consistent'
      - 'home-php:/home/php'
      - 'home-root:/root'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6/msmtprc:/home/php/.msmtprc:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/php-node-akeneo6/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint:ro'
    working_dir: '/var/www'
    environment:
      - 'XHGUI_MONGO_HOSTNAME=mongodb'
      - 'XHGUI_MONGO_DATABASE=xhprof'
      - 'COMPOSER_AUTH=${COMPOSE_PROJECT_COMPOSER_AUTH:-null}'
      - 'NODE_OPTIONS="--max-old-space-size=1024"'
      - 'XDEBUG_MODE=${XDEBUG_MODE_CLI:-off}'
      - 'DATABASE_HOST=${COMPOSE_PROJECT_DATABASE_HOST:-database}'
      - 'DATABASE_PORT=${COMPOSE_PROJECT_DATABASE_PORT:-3306}'
      - 'DATABASE_USER=${COMPOSE_PROJECT_ORO_DB_USER:-akeneo_pim}'
      - 'DATABASE_PASSWORD=${COMPOSE_PROJECT_DATABASE_PASSWORD:-akeneo_pim}'
      - 'DATABASE_NAME=${COMPOSE_PROJECT_DATABASE_NAME:-akeneo_pim}'
      - 'APP_DATABASE_HOST=$${DATABASE_HOST}'
      - 'APP_DATABASE_PORT=$${DATABASE_PORT}'
      - 'APP_DATABASE_NAME=$${DATABASE_NAME}'
      - 'APP_DATABASE_USER=$${DATABASE_USER}'
      - 'APP_DATABASE_PASSWORD=$${DATABASE_PASSWORD}'
      - 'APP_INDEX_HOSTS=elasticsearch:9200'
      - 'NO_DOCKER=true'
      - 'AKENEO_PIM_URL=http://localhost:${COMPOSE_PROJECT_PORT_PREFIX}80'
    networks:
      - 'appnet'
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "mysql:database"
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mail:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  mail:
    image: "cd2team/mailhog"
    container_name: ${COMPOSE_PROJECT_NAME}_mail
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    ports:
      - "${COMPOSE_PROJECT_MAIL_BIND_HOST:-127.0.0.1}:${COMPOSE_PROJECT_PORT_PREFIX:-80}25:8025"
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: "nc -vz -w 1 localhost 8025"
      start_period: 5s
      interval: 2s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  xhgui:
    image: "xhgui/xhgui:0.20"
    profiles: ["profiler"]
    container_name: ${COMPOSE_PROJECT_NAME}_xhgui
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    volumes:
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/xhgui/config:/var/www/xhgui/config'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/xhgui/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    environment:
      - XHGUI_MONGO_HOSTNAME=mongodb
      - XHGUI_MONGO_DATABASE=xhprof
    ports:
      - "${COMPOSE_PROJECT_XHGUI_BIND_HOST:-127.0.0.1}:${COMPOSE_PROJECT_PORT_PREFIX}81:80"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: nc -vz -w 1 localhost 80
      start_period: 30s
      interval: 2s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  mongodb:
    image: mongo:4.4
    profiles: ["profiler"]
    # (case sensitive) engine: mmapv1, rocksdb, wiredTiger, inMemory
    command: --storageEngine=wiredTiger
    container_name: ${COMPOSE_PROJECT_NAME}_mongodb
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    environment:
      - MONGO_INITDB_DATABASE=xhprof
    volumes:
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/mongo/initdb.d:/docker-entrypoint-initdb.d'
    ports:
      - "27017"
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: mongo --quiet --eval 'db.runCommand("ping").ok' xhgui
      start_period: 30s
      interval: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  elasticsearch:
    build:
      context: "${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/elasticsearch"
      args:
        COMPOSE_PROJECT_ELASTICSEARCH_VERSION: ${COMPOSE_PROJECT_ELASTICSEARCH_VERSION:-7.16.3}
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    volumes:
      - "elasticsearch-data:/usr/share/elasticsearch/data:delegated"
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms256m -Xmx2048m}'
      discovery.type: 'single-node'
    ports:
      - "${COMPOSE_PROJECT_ES_BIND_HOST:-127.0.0.1}:${COMPOSE_PROJECT_PORT_PREFIX:-92}92:9200"
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/9200"
      start_period: 15s
      interval: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  database:
    image: '${COMPOSE_PROJECT_MYSQL_IMAGE:-mysql:8.0-oracle}'
    command: '--federated --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    container_name: ${COMPOSE_PROJECT_NAME}_database
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    environment:
      - 'LANG=C.UTF-8'
      - 'MYSQL_ROOT_PASSWORD=root'
      - 'MYSQL_USER=${COMPOSE_PROJECT_DATABASE_USER:-akeneo6}'
      - 'MYSQL_PASSWORD=${COMPOSE_PROJECT_DATABASE_PASSWORD:-akeneo6}'
      - 'MYSQL_DATABASE=${COMPOSE_PROJECT_DATABASE_NAME:-akeneo6}'
    volumes:
#      - '${COMPOSE_PROJECT_APPDIR:-$PWD}/.mysql.initdb.d:/docker-entrypoint-initdb.d:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/mysql/my.cnf:/etc/mysql/conf.d/app.cnf:ro'
      - 'mysql-data:/var/lib/mysql:delegated'
    ports:
      - '${COMPOSE_PROJECT_MYSQL_BIND_HOST:-127.0.0.1}:${COMPOSE_PROJECT_PORT_PREFIX:-33}06:3306'
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: "mysqladmin ping --silent -u$${MYSQL_USER} -p$${MYSQL_PASSWORD}"
      start_period: 60s
      interval: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  database-cli:
    image: '${COMPOSE_PROJECT_MYSQL_IMAGE:-mysql:8.0-oracle}'
    command: /bin/true
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    environment:
      - 'LANG=C.UTF-8'
      - 'DATABASE_HOST=${COMPOSE_PROJECT_DATABASE_HOST:-database}'
      - 'DATABASE_PORT=${COMPOSE_PROJECT_DATABASE_PORT:-3306}'
      - 'DATABASE_USER=${COMPOSE_PROJECT_DATABASE_USER:-akeneo6}'
      - 'DATABASE_PASSWORD=${COMPOSE_PROJECT_DATABASE_PASSWORD:-akeneo6}'
      - 'DATABASE_NAME=${COMPOSE_PROJECT_DATABASE_NAME:-akeneo6}'
    networks:
      - 'appnet'
    depends_on:
      database:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  nginx:
    build: "${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/nginx"
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    labels:
      - 'project.name=${COMPOSE_PROJECT_NAME}'
    depends_on:
      fpm:
        condition: service_healthy
    ports:
      - '${COMPOSE_PROJECT_NGINX_BIND_HOST:-127.0.0.1}:${COMPOSE_PROJECT_PORT_PREFIX}80:80'
    volumes:
      - 'appcode:/var/www:ro'
      - '${COMPOSE_PROJECT_CONFIG_DIR:-.}/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    networks:
      - 'appnet'
    restart: always
    healthcheck:
      test: /bin/bash -c "</dev/tcp/localhost/80"
      start_period: 30s
      interval: 2s

networks:
  appnet:

volumes:
  appcode:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${COMPOSE_PROJECT_APPDIR:-$PWD}"
  home-php:
    driver: local
  home-root:
    driver: local
  elasticsearch-data:
    driver: local
  mysql-data:
    driver: local
